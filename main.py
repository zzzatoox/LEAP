from fastapi import FastAPI, Request
from bot import send_alert
import logging
import hashlib
import time

app = FastAPI()

logging.basicConfig(level=logging.INFO)

sent_fingerprints = {}


@app.post("/grafana-alert")
async def grafana_webhook(request: Request):
    payload = await request.json()
    logging.info(f"‚úÖ –ü–æ–ª—É—á–µ–Ω webhook –æ—Ç Grafana: {payload}")

    alerts = payload.get("alerts", [])
    for alert in alerts:
        status = alert.get("status", "firing").upper()
        labels = alert.get("labels", {})
        annotations = alert.get("annotations", {})
        summary = annotations.get("summary", "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è")
        value_string = alert.get("valueString", "")
        starts_at = alert.get("startsAt", "")[:19].replace("T", " ")

        service = labels.get("service", labels.get("job", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å"))
        level = labels.get("level", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å")

        # panel_url = alert.get("panelURL")
        # grafana_link = f"\n\nüîó [–û—Ç–∫—Ä—ã—Ç—å –≤ Grafana]({panel_url})" if panel_url else ""

        fingerprint_raw = f"{status}-{service}-{level}-{summary}"
        fingerprint = hashlib.md5(fingerprint_raw.encode()).hexdigest()

        now = time.time()
        if fingerprint in sent_fingerprints:
            if now - sent_fingerprints[fingerprint] < 600:
                logging.info(f"üîÅ –ü—Ä–æ–ø—É—â–µ–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {fingerprint_raw}")
                continue

        sent_fingerprints[fingerprint] = now

        msg = (
            f"üö® *[{status}]* {labels.get('alertname', '–ê–ª–µ—Ä—Ç –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}\n"
            f"üì¶ –°–µ—Ä–≤–∏—Å: {service} | –£—Ä–æ–≤–µ–Ω—å: {level}\n"
            f"üïí –í—Ä–µ–º—è: {starts_at}\n"
            f"üìä –ó–Ω–∞—á–µ–Ω–∏—è: {value_string or '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}\n\n"
            f"üìù –û–ø–∏—Å–∞–Ω–∏–µ:\n{summary}"
        )
        await send_alert(msg)

    return {"ok": True}
